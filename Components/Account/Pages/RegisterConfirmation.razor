@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using SklepHkr2025.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Potwierdzenie rejestracji</PageTitle>

<h1>Potwierdzenie rejestracji na stronie hkr24.pl</h1>

<StatusMessage Message="@statusMessage" />

@if (emailConfirmationLink is not null)
{
    <p>
        Wystąpił błąd podczas generowania wiadomości email, potwierdzającej rejestrację konta.
        Prosimy o kontakt z administracją sklepu hkr24.pl, poprzez formularz na stronie.
        Po potwierdzeniu danych konto zostanie aktywowane przez administratora.
    </p>
}
else
{
    <p role="alert">Proszę sprawdzić pocztę email. Potwierdź rejestrację klikając w link w wiadomości.</p>
}

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            // var userId = await UserManager.GetUserIdAsync(user);
            // var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            // code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            // emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
            //     NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            //     new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }
}
