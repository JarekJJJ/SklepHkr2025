@implements IDisposable

@inject NavigationManager NavigationManager

<RadzenMenu>
    <RadzenMenuItem Text="Home" Icon="home" Path="/"/>
    <RadzenMenuItem Text="Sklep" Icon="store" Path="/sklep" />
    <RadzenMenuItem Text="Administracja" Icon="payment" Disabled="false">
        <RadzenMenuItem Text="Ustawienia dostawcy" Icon="warehouse">
            <RadzenMenuItem Text="Incom ustawienia" Path="/admin/incom/settings" Icon="settings"></RadzenMenuItem>
        </RadzenMenuItem>
        <RadzenMenuItem Text="Ustawienia kategorie sklep" Icon="storefront">
            <RadzenMenuItem Text="Kategorie sklep - lista" Path="/admin/shop/categories" Icon="list"></RadzenMenuItem>
        </RadzenMenuItem>
    

    </RadzenMenuItem>
</RadzenMenu>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
